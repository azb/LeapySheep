<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_leapy_sheep_old</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_hud)
//sprite_index = global.skin

scr_touch_controls_init()

jx_start = -1

held_time = 0

zspeed = 0

z = 0

taps = 0

jetpack_on = 0

time_since_last_click = 0
    
if joystick_exists(1)
    global.js = 1
else
    global.js = 0

audio_play_sound(snd_music,0,1)

sprite_index = global.skin[global.skin_selected]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if lengthdir_x(1,image_angle) &gt; 0
    m = 1
else
    m = -1


scr_game_end()

if x &gt; room_width x = room_width
if x &lt; 0 x = 0

if global.js &gt; 0
    {
    
    }

//score++
if keyboard_check(vk_up)
    {
    y-=32
    }
if keyboard_check(vk_down)
    {
    y+=32
    }
if keyboard_check(vk_left)
    {
    x-=32
    }
if keyboard_check(vk_right)
    {
    x+=32
    }
/*
if mouse_check_button(1)
    {
    
    if mouse_x &lt; room_width/2
        {
        if x &gt; 64
        x -= 32
        }
    if mouse_x &gt; room_width/2
        {
        if x &lt; room_width - 64
        x += 32
        }
    }
*/


//if x &lt; 16 x  = 16
//if x &gt; room_width - 16 x  = room_width - 16

depth = -y

view_follow()
/*
repeat(64)
if collision_circle(x,y,sprite_width/2,obj_fence,0,1)
{
nf = instance_nearest(x,y,obj_fence)
if nf.x &gt; x x--
if nf.x &lt; x x++
if nf.y &gt; y y--
if nf.y &lt; y y++
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_alien">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if z = 0
{
room = rm_lose
audio_stop_all()
audio_play_sound(snd_baa006,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_flower">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other
{
x = irandom(room_width)
y = view_yview[0]-128
}
score++
audio_play_sound(snd_eat_plant,0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ufo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !collision_circle(x,y,64,obj_tree,1,1)
{
room = rm_lose
audio_stop_all()
audio_play_sound(snd_baa006,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprite_index,-1,x,y+15,1,m,image_angle,c_black,.4)
//draw_sprite_ext(spr_rocket_pack,jetpack_on+1,x,y+15,1,1,image_angle,c_black,.4)

draw_sprite_ext(sprite_index,-1,x,y-z,1,m,image_angle,c_white,1)

//draw_sprite_ext(spr_rocket_pack,jetpack_on+1,x,y-z,1,1,image_angle,c_white,1)

//draw_self()

scr_mouse_device_handling()

//joystick_radius = 128

time_since_last_click++

if mouse_check_button_pressed(1)
    {
    jx_start = mouse_x - view_xview[0]
    jy_start = mouse_y - view_yview[0]
    vx_start = view_xview[0]
    vy_start = view_yview[0]
    held_time = 0
    /*
    if time_since_last_click &lt;= 7
        {
        jetpack_on = !jetpack_on
        taps = 0
        }*/
    time_since_last_click = 0
    }

if mouse_check_button(1)
    {
    held_time++
    }

//JUMP
if mouse_y &gt; view_yview[0] + 96
if speed = 0
if mouse_check_button_released(1)
    {
    taps++
    jx_start = -1
    if held_time &lt; 5
        {
        //motion_add(image_angle , 60)
        //friction = 5
        zspeed = 25
        audio_play_sound(snd_jump,0,0)
        }
    }

if z = 0
if global.js &gt; 0
    {
    if joystick_check_button(1,1)
        {
        zspeed = 25
        audio_play_sound(snd_jump,0,0)
        }
    }
    
if held_time &gt; 15 || held_time = 0
    taps = 0

z += zspeed

if jetpack_on
    {
    ne = instance_create(x,y-z,obj_rocket_exaugst)
    ne.direction = image_angle + 180
    ne.speed = irandom(10) + 10
    ne.image_angle = image_angle
    x += lengthdir_x(32,image_angle)
    y += lengthdir_y(32,image_angle)
    }

if z &gt; 0 + (jetpack_on * 96)
    {
    speed = 25
    direction = image_angle
    if sprite_index = spr_bunny
    zspeed -= 4
    else
    zspeed -= 7    
    }
else
    {
    speed = 0
    z = 0 + (jetpack_on * 96)
    zspeed = 0
    }
    
moving = 0

move_spd = 16

if sprite_index = spr_bunny
move_spd = 25

if sprite_index = spr_turtle
move_spd = 8


if global.js &gt; 0
    {
    ok = 1
    dir1 = point_direction(0,0,joystick_xpos(1),joystick_ypos(1))
    
    x1 = x + lengthdir_x(sprite_width/2,dir1)
    y1 = y + lengthdir_y(sprite_width/2,dir1)
    
    if collision_circle(x1,y1,10,obj_fence,1,1)
        ok = 0
    if z &gt; 0 ok = 1
    if point_distance(0,0,joystick_xpos(1),joystick_ypos(1)) &gt; .3
    if ok if !jetpack_on
        {
        x += joystick_xpos(1) * (move_spd + (sprite_index == spr_bunny) * 20)
        y += joystick_ypos(1) * (move_spd + (sprite_index == spr_bunny) * 20)
        moving = 1
        image_angle = point_direction(0,0,joystick_xpos(1),joystick_ypos(1))
        }
    }

if jx_start != -1
    {
    scr_touch_joystick(jx_start , jy_start , 96 , 1)
    //if point_distance(jx_start , jy_start , mouse_x - view_xview[0] , mouse_y - view_yview[0] ) &gt; 2
    if point_distance(jx , jy , 0 , 0 ) &gt; .1
        {
        ok = 1
        dir1 = point_direction(0,0,jx,jy)
        
        x1 = x + lengthdir_x(sprite_width/2,dir1)
        y1 = y + lengthdir_y(sprite_width/2,dir1)
        
        if collision_circle(x1,y1,10,obj_fence,1,1)
            ok = 0
        if z &gt; 0 ok = 1
        if ok if !jetpack_on
            {
            x += jx * move_spd
            y += jy * move_spd
            moving = 1
            image_angle = point_direction(0,0,jx,jy)
            }
        }
    }
if moving
    {
    image_speed = .3
    }
else
    {
    image_speed = 0
    image_index = 0
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
