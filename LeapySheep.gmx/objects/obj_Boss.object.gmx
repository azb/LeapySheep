<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ufo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MOVE_SPEED = 15
BOSS_COUNTDOWN = 5
MOVE_DURATION = 8 + floor(random(50))
MOVE_INCREMENT = 100 + floor(random(50))
time_before_move = MOVE_INCREMENT
time_of_move = MOVE_DURATION

tx = -1
ty = -1

cooldown = 0

friction = .1

vit = 10
maxvit = 10

z = 300
zspeed = 1

direction = point_direction(x,y,obj_leapysheep.x,obj_leapysheep.y)
speed = irandom(3) + 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>irandom(25) + 100</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 20

if vit &gt; 0
{
if cooldown &gt; - 5
    {
    cooldown--
    if cooldown &lt;= 0
        {
        nl = instance_create(x,y,obj_laser)
        nl.direction = point_direction(x,y,obj_leapysheep.x,obj_leapysheep.y)
        nl.speed = 40
        nl.image_angle = nl.direction
        
        nl.tx = obj_leapysheep.x
        nl.ty = obj_leapysheep.y
        
        if irandom(10) &gt; 3
            {
            tx = obj_leapysheep.x
            ty = obj_leapysheep.y
            }
        }
    }
else
    {
    cooldown = 5
    }
}
/*
BOSS_COUNTDOWN -= 1
if(BOSS_COUNTDOWN == 0)
{

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vit &lt;= 0
    {
    if z &gt; 0
    image_angle += speed
    else
    image_angle += speed / 5
    
    if z &gt; 0
    zspeed -= .1
    else
        {
        zspeed = 0
        z = 0
        }
    }
else
    {
    if z &lt; 300 zspeed += .1
    if z &gt; 300 zspeed -= .1
    }
    
if z = 0
    {
    friction = .5
    if speed &gt; 0
        {
        nc = instance_create(x,y,obj_crater)
        nc.image_xscale = image_xscale 
        nc.image_yscale = image_xscale // 10
        
        }
    }
    
z += zspeed
    
if vit &gt; 0
if tx &gt; -1
    {
    dir1 = point_direction(x,y,tx,ty)
    motion_add(dir1,.5)
    if point_distance(x,y,tx,ty) &lt; speed + 8
    tx = -1
    }
depth = -y

/*
if time_before_move &gt; 0 {
    time_before_move--
    time_of_move = MOVE_DURATION
}
else {
    if time_of_move == MOVE_DURATION {
        face_direction = point_direction(x,y,obj_leapysheep.x,obj_leapysheep.y)
        direction = face_direction 
        //image_angle = face_direction
        speed = MOVE_SPEED
    }
    if time_of_move &gt; 0 {
        time_of_move--
    }
    else if time_of_move &lt;= 0 {
        time_before_move = MOVE_INCREMENT
        speed = 0
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_destroy()
//effect_create_above(ef_explosion,x,y,2,c_yellow)

vit -= 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y+z,image_xscale,image_yscale,image_angle,c_black,.2)
draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,c_white,1)

if vit &gt; 0
status_bar(x,y-128,64,8,vit,maxvit,c_black,c_red)
/*
x1 = 50 
y1 =  50
if collision_line(x,y,x1,y1,obj_leapysheep,1,1)
if !collision_circle(obj_leapysheep.x,obj_leapysheep.y,64,obj_tree,1,1)
    {
    direction = point_direction(x,y,x1,y1)
    speed = 32
    alarm[0] = 200
    }
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
