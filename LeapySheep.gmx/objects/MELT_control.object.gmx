<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

MELT_TAB_HOME=0
MELT_TAB_EDIT=10
MELT_TAB_INSERT=1
MELT_TAB_PAGE=2
MELT_TAB_DESIGN=3
MELT_TAB_SETTINGS=4

toolbar_scroll = 0
show_all_layers = 1
edit_all_layers = 1
layer = 0

slx1 = -1
selected_objects = 0


version = " (v1.1 Beta)"

page = 0
pages = 8

global.halign = fa_center
global.valign = fa_center

checkbox_val = 0
toolbar_y_target = 0
show_comments = 1 //whether or not to add help comments to exported code

show_beta = 0

//Grid
show_grid = 0

//Horizontal and vertical snapping
hsnap = 16
vsnap = 16

tab = 1

moving_toolbar = 0
toolbar_x = 0
toolbar_y = 0

sl_slide = 0

input_string_var = ""
scroll_sl = -1
scroll_pos = 0
code_pos = 0

show_code = 0
get_code = 0

create_code_str = ""
draw_code_str = ""
alarm_code_str = ""

tabval = -1
checkval = 0
melted = 0

copying = -1
selected = -1

//window_set_caption("Interface Editor")

resizing = -1
num_deleted = 0
moving = -1
waiting_for = -1
waiting = -1
global.tab = -1
global.GUIs = 0

global.GUI_x[0] = 0
global.GUI_y[0] = 0
global.GUI_w[0] = 0
global.GUI_h[0] = 0
global.GUI_type[0] = ""
global.GUI_text[0] = ""

global.GUI_devmode = 0

dev_pos = 0

placing = ""

placing_w = 64
placing_h = 48

sln = -1

MELT_scr_cursor_alarm_init()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MELT_scr_text_cursor_alarm()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EXPORT CODE
export_str = ""

if create_code_str &gt; ""
{
export_str += 
"
//CREATE EVENT CODE
//put this code in the create event of your interface drawing object
"
+ create_code_str
}

export_str += 
"
//DRAW EVENT CODE
//put this code in the draw event of your interface drawing object
"
+ draw_code_str

if alarm_code_str &gt; ""
{
export_str += 
"
//ALARM EVENT CODE
//put this code in the alarm event of your interface drawing object (default is alarm[0])
"
+ alarm_code_str
}

string_replace_all(export_str , 
"
" , "")

clipboard_set_text(export_str)

show_message("Code Copied to Clipboard:##"+export_str)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LIQUIDIZE
melted = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if selected &gt; -1
    {
    sl_slide = MELT_adjust(sl_slide , 1)
    }

if global.GUI_devmode
    {
    dev_pos = MELT_adjust(dev_pos , 1)
    }
else
    {
    dev_pos = MELT_adjust(dev_pos , 0)
    }
    
if show_code
    {
    code_pos = MELT_adjust(code_pos , 1)
    }
else
    {
    code_pos = MELT_adjust(code_pos , 0)
    }

if (keyboard_check(vk_control)
&amp;&amp; keyboard_check_pressed(ord("Q"))) //|| (mouse_y &lt; 32 &amp;&amp; mouse_x &lt; room_width - 32 &amp;&amp; mouse_check_button_pressed(1) &amp;&amp; !global.GUI_devmode)
    {
    if !global.GUI_devmode
    if !melted
        {
        alarm[0] = 1
        melted = 1
        }
    global.GUI_devmode = !global.GUI_devmode
    }
    
if global.GUI_devmode
    {
    if (keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(vk_tab))
        {
        if tab &lt; 4
            {
            tab++
            }
        else
            {
            tab = 0
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.GUI_devmode
if show_grid
    {
    draw_set_color(c_black)
    draw_set_alpha(1)
    
    //Vertical lines
    for(i=0 ; i &lt; room_width ; i += hsnap)
        draw_line(i,0,i,room_height)
    
    //Horizontal lines
    for(i=0 ; i &lt; room_height ; i += vsnap)
        draw_line(0,i,room_width,i)
    }

if mouse_check_button_pressed(1)
if waiting = -1
    selected = -1

draw_set_font(MELT_font_default)    
if waiting &gt; -1
    {
    if instance_exists(waiting)
        {
        answer = waiting.answer
        }
    else
        {
        waiting = -1
        waiting_for = -1
        }
    }

MELT_scr_shorter_view_names()

/*
if MELT_drawButton(vx+vw-w/2 - 128,vy-32+70*dev_pos + 8,128,64-24,"MELT")
    {
    alarm[0] = 2
    }
*/

MELT_scr_draw_interface()

MELT_placing()

//TOPBAR
if placing = ""
    {
    MELT_scr_topbar()
    }

//SHOW CODE show_code
/*
draw_set_color(c_black)
draw_set_alpha(.8)
draw_rectangle(vx + vw - dev_pos * code_pos * 320 , vy + 64 + 32 + toolbar_y, vx + vw , vy + vh + toolbar_y, 0)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
scr_paragraph(export_str,vx + vw - dev_pos * code_pos * 320 + 8 , vy + 64 + 32 + 8 + toolbar_y,256,c_white)
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
